{"version":3,"sources":["CurrentUser.js","TodoList.js","App.js","store.js","index.js"],"names":["CurrentUser","_ref","user","react_default","a","createElement","className","id","name","email","phone","TodoList","todos","showUser","map","todo","key","htmlFor","concat","type","checked","completed","readOnly","title","onClick","userId","currentUser","username","address","street","suite","city","zipcode","geo","lat","lng","website","company","catchPhrase","bs","App","src_CurrentUser","src_TodoList","store","createStore","state","action","ReactDOM","render","es","src_App","document","getElementById"],"mappings":"qMAkBeA,SAfK,SAAAC,GAAA,IAAGC,EAAHD,EAAGC,KAAH,OAClBC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACbH,EAAAC,EAAAC,cAAA,gCACAF,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,cAEGH,EAAKK,IAERJ,EAAAC,EAAAC,cAAA,UAAKH,EAAKM,MACVL,EAAAC,EAAAC,cAAA,UAAKH,EAAKO,OACVN,EAAAC,EAAAC,cAAA,UAAKH,EAAKQ,WCiBDC,EA3BE,SAAAV,GAAA,IAAGW,EAAHX,EAAGW,MAAOC,EAAVZ,EAAUY,SAAV,OACfV,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACbH,EAAAC,EAAAC,cAAA,wBAEAF,EAAAC,EAAAC,cAAA,MAAIC,UAAU,kBACXM,EAAME,IAAI,SAAAC,GAAI,OACbZ,EAAAC,EAAAC,cAAA,MAAIW,IAAKD,EAAKR,GAAID,UAAU,kBAC1BH,EAAAC,EAAAC,cAAA,SAAOY,QAAO,QAAAC,OAAUH,EAAKR,KAC3BJ,EAAAC,EAAAC,cAAA,SACEc,KAAK,WACLZ,GAAE,QAAAW,OAAUH,EAAKR,IACjBa,QAASL,EAAKM,UACdC,UAAQ,IAETP,EAAKQ,OAGRpB,EAAAC,EAAAC,cAAA,UAAQc,KAAK,SAASK,QAAS,kBAAMX,EAASE,EAAKU,UAAnD,OAEGV,EAAKU,cCjBZb,EAAQ,CACZ,CACEa,OAAQ,EACRlB,GAAI,EACJgB,MAAO,qBACPF,WAAW,GAEb,CACEI,OAAQ,EACRlB,GAAI,EACJgB,MAAO,qCACPF,WAAW,GAEb,CACEI,OAAQ,EACRlB,GAAI,EACJgB,MAAO,sBACPF,WAAW,GAEb,CACEI,OAAQ,EACRlB,GAAI,EACJgB,MAAO,mBACPF,WAAW,GAEb,CACEI,OAAQ,EACRlB,GAAI,EACJgB,MAAO,kEACPF,WAAW,GAEb,CACEI,OAAQ,EACRlB,GAAI,EACJgB,MAAO,oDACPF,WAAW,IAGTK,EAAc,CAClBnB,GAAI,EACJC,KAAM,gBACNmB,SAAU,OACVlB,MAAO,oBACPmB,QAAS,CACPC,OAAQ,cACRC,MAAO,WACPC,KAAM,cACNC,QAAS,aACTC,IAAK,CACHC,IAAK,WACLC,IAAK,YAGTzB,MAAO,wBACP0B,QAAS,gBACTC,QAAS,CACP7B,KAAM,kBACN8B,YAAa,yCACbC,GAAI,gCA+DOC,EA3DH,kBACVrC,EAAAC,EAAAC,cAAA,QAAMC,UAAU,OACdH,EAAAC,EAAAC,cAAA,eACEF,EAAAC,EAAAC,cAAA,KAAGC,UAAU,QAAb,2BAEEH,EAAAC,EAAAC,cAAA,UAAQc,KAAK,UAAb,SAGFhB,EAAAC,EAAAC,cAAA,KAAGC,UAAU,QAAb,yBAEFH,EAAAC,EAAAC,cAAA,eACEF,EAAAC,EAAAC,cAAA,KAAGC,UAAU,QAAb,cACAH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,QAAb,eAEFH,EAAAC,EAAAC,cAAA,eACEF,EAAAC,EAAAC,cAAA,KAAGC,UAAU,QAAb,uBAEEH,EAAAC,EAAAC,cAAA,UAAQc,KAAK,UAAb,WAGFhB,EAAAC,EAAAC,cAAA,KAAGC,UAAU,QAAb,sBAEEH,EAAAC,EAAAC,cAAA,UAAQc,KAAK,UAAb,YAGJhB,EAAAC,EAAAC,cAAA,eACEF,EAAAC,EAAAC,cAAA,KAAGC,UAAU,QAAb,qBAEEH,EAAAC,EAAAC,cAAA,UAAQc,KAAK,UAAb,UAGFhB,EAAAC,EAAAC,cAAA,KAAGC,UAAU,QAAb,oBAEEH,EAAAC,EAAAC,cAAA,UAAQc,KAAK,UAAb,WAGJhB,EAAAC,EAAAC,cAAA,eACEF,EAAAC,EAAAC,cAAA,KAAGC,UAAU,QAAb,oBACAH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,QAAb,6BAEFH,EAAAC,EAAAC,cAAA,eACEF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YAEjBH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACbH,EAAAC,EAAAC,cAACoC,EAAD,CAAavC,KAAMwB,MAGvBvB,EAAAC,EAAAC,cAAA,eACEF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACbH,EAAAC,EAAAC,cAACqC,EAAD,CAAU9B,MAAOA,KAEnBT,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,sBCxGRqC,EALDC,YAPE,SAACC,EAAOC,GAGlB,OAFIA,EAAO3B,KAEJ0B,GALQ,ICarBE,IAASC,OAAO7C,EAAAC,EAAAC,cANH,kBACXF,EAAAC,EAAAC,cAAC4C,EAAA,EAAD,CAAUN,MAAOA,GACfxC,EAAAC,EAAAC,cAAC6C,EAAD,QAIY,MAAUC,SAASC,eAAe","file":"static/js/main.042d8b49.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst CurrentUser = ({ user }) => (\n  <div className=\"CurrentUser\">\n    <strong>Selected user:</strong>\n    <ul>\n      <li>\n#\n        {user.id}\n      </li>\n      <li>{user.name}</li>\n      <li>{user.email}</li>\n      <li>{user.phone}</li>\n    </ul>\n  </div>\n);\n\nexport default CurrentUser;\n\nCurrentUser.propTypes = {\n  user: PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    name: PropTypes.string.isRequired,\n    email: PropTypes.string.isRequired,\n    phone: PropTypes.string.isRequired,\n  }).isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst TodoList = ({ todos, showUser }) => (\n  <div className=\"TodoList\">\n    <strong>Todos:</strong>\n\n    <ul className=\"TodoList__list\">\n      {todos.map(todo => (\n        <li key={todo.id} className=\"TodoList__item\">\n          <label htmlFor={`todo-${todo.id}`}>\n            <input\n              type=\"checkbox\"\n              id={`todo-${todo.id}`}\n              checked={todo.completed}\n              readOnly\n            />\n            {todo.title}\n          </label>\n\n          <button type=\"button\" onClick={() => showUser(todo.userId)}>\n            User\n            {todo.userId}\n          </button>\n        </li>\n      ))}\n    </ul>\n  </div>\n);\n\nexport default TodoList;\n\nTodoList.propTypes = {\n  todos: PropTypes.arrayOf(PropTypes.object).isRequired,\n  showUser: PropTypes.func.isRequired,\n};\n","import React from 'react';\n\nimport CurrentUser from './CurrentUser';\nimport TodoList from './TodoList';\n\nconst todos = [\n  {\n    userId: 1,\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n  },\n  {\n    userId: 2,\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n  },\n  {\n    userId: 1,\n    id: 3,\n    title: 'fugiat veniam minus',\n    completed: false,\n  },\n  {\n    userId: 1,\n    id: 4,\n    title: 'et porro tempora',\n    completed: true,\n  },\n  {\n    userId: 4,\n    id: 5,\n    title: 'laboriosam mollitia et enim quasi adipisci quia provident illum',\n    completed: false,\n  },\n  {\n    userId: 1,\n    id: 6,\n    title: 'qui ullam ratione quibusdam voluptatem quia omnis',\n    completed: false,\n  },\n];\nconst currentUser = {\n  id: 1,\n  name: 'Leanne Graham',\n  username: 'Bret',\n  email: 'Sincere@april.biz',\n  address: {\n    street: 'Kulas Light',\n    suite: 'Apt. 556',\n    city: 'Gwenborough',\n    zipcode: '92998-3874',\n    geo: {\n      lat: '-37.3159',\n      lng: '81.1496',\n    },\n  },\n  phone: '1-770-736-8031 x56442',\n  website: 'hildegard.org',\n  company: {\n    name: 'Romaguera-Crona',\n    catchPhrase: 'Multi-layered client-server neural-net',\n    bs: 'harness real-time e-markets',\n  },\n};\n\nconst App = () => (\n  <main className=\"App\">\n    <section>\n      <p className=\"info\">\n        Todos are not loaded yet\n        <button type=\"button\">Load</button>\n      </p>\n\n      <p className=\"info\">User is not selected</p>\n    </section>\n    <section>\n      <p className=\"info\">Loading...</p>\n      <p className=\"info\">Loading...</p>\n    </section>\n    <section>\n      <p className=\"info\">\n        Failed loading todos\n        <button type=\"button\">Reload</button>\n      </p>\n\n      <p className=\"info\">\n        Failed loading user\n        <button type=\"button\">Reload</button>\n      </p>\n    </section>\n    <section>\n      <p className=\"info\">\n        6 todos are loaded\n        <button type=\"button\">Clear</button>\n      </p>\n\n      <p className=\"info\">\n        User #1 is loaded\n        <button type=\"button\">Clear</button>\n      </p>\n    </section>\n    <section>\n      <p className=\"info\">1 todo is loaded</p>\n      <p className=\"info\">User #999 does not exist</p>\n    </section>\n    <section>\n      <div className=\"content\">\n        <div className=\"loader\" />\n      </div>\n      <div className=\"content\">\n        <CurrentUser user={currentUser} />\n      </div>\n    </section>\n    <section>\n      <div className=\"content\">\n        <TodoList todos={todos} />\n      </div>\n      <div className=\"content\">\n        <div className=\"loader\" />\n      </div>\n    </section>\n  </main>\n);\n\nexport default App;\n","import { createStore } from 'redux';\n\nconst initialState = {};\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    default:\n      return state;\n  }\n};\n\nconst store = createStore(\n  reducer,\n  initialState\n);\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\n\nimport './styles.css';\n\nimport App from './App';\nimport store from './store';\n\nconst Root = () => (\n  <Provider store={store}>\n    <App />\n  </Provider>\n);\n\nReactDOM.render(<Root />, document.getElementById('root'));\n"],"sourceRoot":""}