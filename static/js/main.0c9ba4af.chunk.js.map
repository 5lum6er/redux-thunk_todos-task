{"version":3,"sources":["CurrentUser.js","TodoList.js","api.js","App.js","store.js","index.js"],"names":["CurrentUser","_ref","user","react_default","a","createElement","className","concat","id","name","email","phone","TodoList","todos","showUser","map","todo","key","htmlFor","type","checked","completed","readOnly","title","onClick","userId","API_URL","getTodos","Object","asyncToGenerator","regenerator_default","mark","_callee","response","getTodoByUserId","wrap","_context","prev","next","wait","fetch","sent","json","find","abrupt","filter","stop","apply","this","arguments","delay","Promise","resolve","setTimeout","then","console","log","currentUser","username","address","street","suite","city","zipcode","geo","lat","lng","website","company","catchPhrase","bs","App","src_CurrentUser","src_TodoList","store","createStore","state","action","ReactDOM","render","es","src_App","document","getElementById"],"mappings":"qMAeeA,SAZK,SAAAC,GAAA,IAAGC,EAAHD,EAAGC,KAAH,OAClBC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACbH,EAAAC,EAAAC,cAAA,gCACAF,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,cAAAE,OAASL,EAAKM,KACdL,EAAAC,EAAAC,cAAA,UAAKH,EAAKO,MACVN,EAAAC,EAAAC,cAAA,UAAKH,EAAKQ,OACVP,EAAAC,EAAAC,cAAA,UAAKH,EAAKS,WCoBDC,EA3BE,SAAAX,GAAA,IAAGY,EAAHZ,EAAGY,MAAOC,EAAVb,EAAUa,SAAV,OACfX,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACbH,EAAAC,EAAAC,cAAA,wBAEAF,EAAAC,EAAAC,cAAA,MAAIC,UAAU,kBACXO,EAAME,IAAI,SAAAC,GAAI,OACbb,EAAAC,EAAAC,cAAA,MAAIY,IAAKD,EAAKR,GAAIF,UAAU,kBAC1BH,EAAAC,EAAAC,cAAA,SAAOa,QAAO,QAAAX,OAAUS,EAAKR,KAC3BL,EAAAC,EAAAC,cAAA,SACEc,KAAK,WACLX,GAAE,QAAAD,OAAUS,EAAKR,IACjBY,QAASJ,EAAKK,UACdC,UAAQ,IAETN,EAAKO,OAGRpB,EAAAC,EAAAC,cAAA,UAAQc,KAAK,SAASK,QAAS,kBAAMV,EAASE,EAAKS,UAAnD,OAEGT,EAAKS,qCCtBZC,EAAU,uCAEHC,EAAQ,eAAA1B,EAAA2B,OAAAC,EAAA,EAAAD,CAAAE,EAAA1B,EAAA2B,KAAG,SAAAC,IAAA,IAAAC,EAAApB,EAAAqB,EAAA,OAAAJ,EAAA1B,EAAA+B,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EAChBC,EAAK,KADW,cAAAH,EAAAE,KAAA,EAECE,MAAK,GAAAjC,OAAImB,EAAJ,WAFN,cAEhBO,EAFgBG,EAAAK,KAAAL,EAAAE,KAAA,EAGFL,EAASS,OAHP,cAGhB7B,EAHgBuB,EAAAK,KAKhBP,EAAkB,SAAAT,GAAM,OAAIZ,EAAM8B,KAAK,SAAA3B,GAAI,OAAIA,EAAKS,SAAWA,KAL/CW,EAAAQ,OAAA,SAOf/B,EAAMgC,OAAO,SAAA7B,GAAI,OAAIA,IAASkB,EAAgBlB,EAAKS,WAPpC,yBAAAW,EAAAU,SAAAd,MAAH,yBAAA/B,EAAA8C,MAAAC,KAAAC,YAAA,GAiBfV,EAAO,SAAAW,GAAK,OAAI,IAAIC,QAAQ,SAACC,GACjCC,WAAWD,EAASF,MCdtBvB,IACG2B,KAAK,SAAAzC,GACJ0C,QAAQC,IAAI3C,KAGhB,IAAMA,EAAQ,CACZ,CACEY,OAAQ,EACRjB,GAAI,EACJe,MAAO,qBACPF,WAAW,GAEb,CACEI,OAAQ,EACRjB,GAAI,EACJe,MAAO,qCACPF,WAAW,GAEb,CACEI,OAAQ,EACRjB,GAAI,EACJe,MAAO,sBACPF,WAAW,GAEb,CACEI,OAAQ,EACRjB,GAAI,EACJe,MAAO,mBACPF,WAAW,GAEb,CACEI,OAAQ,EACRjB,GAAI,EACJe,MAAO,kEACPF,WAAW,GAEb,CACEI,OAAQ,EACRjB,GAAI,EACJe,MAAO,oDACPF,WAAW,IAGToC,EAAc,CAClBjD,GAAI,EACJC,KAAM,gBACNiD,SAAU,OACVhD,MAAO,oBACPiD,QAAS,CACPC,OAAQ,cACRC,MAAO,WACPC,KAAM,cACNC,QAAS,aACTC,IAAK,CACHC,IAAK,WACLC,IAAK,YAGTvD,MAAO,wBACPwD,QAAS,gBACTC,QAAS,CACP3D,KAAM,kBACN4D,YAAa,yCACbC,GAAI,gCAkFOC,EA9EH,kBACVpE,EAAAC,EAAAC,cAAA,QAAMC,UAAU,OACdH,EAAAC,EAAAC,cAAA,eACEF,EAAAC,EAAAC,cAAA,KAAGC,UAAU,QAAb,2BAEEH,EAAAC,EAAAC,cAAA,UAAQc,KAAK,UAAb,SAGFhB,EAAAC,EAAAC,cAAA,KAAGC,UAAU,QAAb,yBAGFH,EAAAC,EAAAC,cAAA,eACEF,EAAAC,EAAAC,cAAA,KAAGC,UAAU,QAAb,cACAH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,QAAb,eAGFH,EAAAC,EAAAC,cAAA,eACEF,EAAAC,EAAAC,cAAA,KAAGC,UAAU,QAAb,uBAEEH,EAAAC,EAAAC,cAAA,UAAQc,KAAK,UAAb,WAGFhB,EAAAC,EAAAC,cAAA,KAAGC,UAAU,QAAb,sBAEEH,EAAAC,EAAAC,cAAA,UAAQc,KAAK,UAAb,YAIJhB,EAAAC,EAAAC,cAAA,eACEF,EAAAC,EAAAC,cAAA,KAAGC,UAAU,QAAb,qBAEEH,EAAAC,EAAAC,cAAA,UAAQc,KAAK,UAAb,UAGFhB,EAAAC,EAAAC,cAAA,KAAGC,UAAU,QAAb,oBAEEH,EAAAC,EAAAC,cAAA,UAAQc,KAAK,UAAb,WAIJhB,EAAAC,EAAAC,cAAA,eACEF,EAAAC,EAAAC,cAAA,KAAGC,UAAU,QAAb,mBAEEH,EAAAC,EAAAC,cAAA,UAAQc,KAAK,UAAb,UAGFhB,EAAAC,EAAAC,cAAA,KAAGC,UAAU,QAAb,6BAGFH,EAAAC,EAAAC,cAAA,eACEF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACbH,EAAAC,EAAAC,cAAA,eAEFF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACbH,EAAAC,EAAAC,cAAA,gBAIJF,EAAAC,EAAAC,cAAA,eACEF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YAEjBH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACbH,EAAAC,EAAAC,cAACmE,EAAD,CAAatE,KAAMuD,MAIvBtD,EAAAC,EAAAC,cAAA,eACEF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACbH,EAAAC,EAAAC,cAACoE,EAAD,CAAU5D,MAAOA,KAEnBV,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,sBCjIRoE,EALDC,YAPE,SAACC,EAAOC,GAGlB,OAFIA,EAAO1D,KAEJyD,GALQ,ICarBE,IAASC,OAAO5E,EAAAC,EAAAC,cANH,kBACXF,EAAAC,EAAAC,cAAC2E,EAAA,EAAD,CAAUN,MAAOA,GACfvE,EAAAC,EAAAC,cAAC4E,EAAD,QAIY,MAAUC,SAASC,eAAe","file":"static/js/main.0c9ba4af.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst CurrentUser = ({ user }) => (\n  <div className=\"CurrentUser\">\n    <strong>Selected user:</strong>\n    <ul>\n      <li>{`#${user.id}`}</li>\n      <li>{user.name}</li>\n      <li>{user.email}</li>\n      <li>{user.phone}</li>\n    </ul>\n  </div>\n);\n\nexport default CurrentUser;\n\nCurrentUser.propTypes = {\n  user: PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    name: PropTypes.string.isRequired,\n    email: PropTypes.string.isRequired,\n    phone: PropTypes.string.isRequired,\n  }).isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst TodoList = ({ todos, showUser }) => (\n  <div className=\"TodoList\">\n    <strong>Todos:</strong>\n\n    <ul className=\"TodoList__list\">\n      {todos.map(todo => (\n        <li key={todo.id} className=\"TodoList__item\">\n          <label htmlFor={`todo-${todo.id}`}>\n            <input\n              type=\"checkbox\"\n              id={`todo-${todo.id}`}\n              checked={todo.completed}\n              readOnly\n            />\n            {todo.title}\n          </label>\n\n          <button type=\"button\" onClick={() => showUser(todo.userId)}>\n            User\n            {todo.userId}\n          </button>\n        </li>\n      ))}\n    </ul>\n  </div>\n);\n\nexport default TodoList;\n\nTodoList.propTypes = {\n  todos: PropTypes.arrayOf(PropTypes.object).isRequired,\n  showUser: PropTypes.func.isRequired,\n};\n","const API_URL = 'https://jsonplaceholder.typicode.com';\n\nexport const getTodos = async() => {\n  await wait(2000);\n  const response = await fetch(`${API_URL}/todos`);\n  const todos = await response.json();\n\n  const getTodoByUserId = userId => todos.find(todo => todo.userId === userId)\n\n  return todos.filter(todo => todo === getTodoByUserId(todo.userId));\n};\n\nexport const getUser = async(userId) => {\n  await wait(2000);\n  const response = await fetch(`${API_URL}/users/${userId}`);\n\n  return response.json();\n};\n\nconst wait = delay => new Promise((resolve) => {\n  setTimeout(resolve, delay);\n});\n","import React from 'react';\n\nimport CurrentUser from './CurrentUser';\nimport TodoList from './TodoList';\nimport { getTodos } from './api';\n\ngetTodos()\n  .then(todos => {\n    console.log(todos);\n  });\n\nconst todos = [\n  {\n    userId: 1,\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n  },\n  {\n    userId: 2,\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n  },\n  {\n    userId: 1,\n    id: 3,\n    title: 'fugiat veniam minus',\n    completed: false,\n  },\n  {\n    userId: 1,\n    id: 4,\n    title: 'et porro tempora',\n    completed: true,\n  },\n  {\n    userId: 4,\n    id: 5,\n    title: 'laboriosam mollitia et enim quasi adipisci quia provident illum',\n    completed: false,\n  },\n  {\n    userId: 1,\n    id: 6,\n    title: 'qui ullam ratione quibusdam voluptatem quia omnis',\n    completed: false,\n  },\n];\nconst currentUser = {\n  id: 1,\n  name: 'Leanne Graham',\n  username: 'Bret',\n  email: 'Sincere@april.biz',\n  address: {\n    street: 'Kulas Light',\n    suite: 'Apt. 556',\n    city: 'Gwenborough',\n    zipcode: '92998-3874',\n    geo: {\n      lat: '-37.3159',\n      lng: '81.1496',\n    },\n  },\n  phone: '1-770-736-8031 x56442',\n  website: 'hildegard.org',\n  company: {\n    name: 'Romaguera-Crona',\n    catchPhrase: 'Multi-layered client-server neural-net',\n    bs: 'harness real-time e-markets',\n  },\n};\n\nconst App = () => (\n  <main className=\"App\">\n    <section>\n      <p className=\"info\">\n        Todos are not loaded yet\n        <button type=\"button\">Load</button>\n      </p>\n\n      <p className=\"info\">User is not selected</p>\n    </section>\n\n    <section>\n      <p className=\"info\">Loading...</p>\n      <p className=\"info\">Loading...</p>\n    </section>\n\n    <section>\n      <p className=\"info\">\n        Failed loading todos\n        <button type=\"button\">Reload</button>\n      </p>\n\n      <p className=\"info\">\n        Failed loading user\n        <button type=\"button\">Reload</button>\n      </p>\n    </section>\n\n    <section>\n      <p className=\"info\">\n        6 todos are loaded\n        <button type=\"button\">Clear</button>\n      </p>\n\n      <p className=\"info\">\n        User #1 is loaded\n        <button type=\"button\">Clear</button>\n      </p>\n    </section>\n\n    <section>\n      <p className=\"info\">\n        1 todo is loaded\n        <button type=\"button\">Clear</button>\n      </p>\n\n      <p className=\"info\">User #999 does not exist</p>\n    </section>\n\n    <section>\n      <div className=\"content\">\n        <p>-</p>\n      </div>\n      <div className=\"content\">\n        <p>-</p>\n      </div>\n    </section>\n\n    <section>\n      <div className=\"content\">\n        <div className=\"loader\" />\n      </div>\n      <div className=\"content\">\n        <CurrentUser user={currentUser} />\n      </div>\n    </section>\n\n    <section>\n      <div className=\"content\">\n        <TodoList todos={todos} />\n      </div>\n      <div className=\"content\">\n        <div className=\"loader\" />\n      </div>\n    </section>\n  </main>\n);\n\nexport default App;\n","import { createStore } from 'redux';\n\nconst initialState = {};\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    default:\n      return state;\n  }\n};\n\nconst store = createStore(\n  reducer,\n  initialState\n);\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\n\nimport './styles.css';\n\nimport App from './App';\nimport store from './store';\n\nconst Root = () => (\n  <Provider store={store}>\n    <App />\n  </Provider>\n);\n\nReactDOM.render(<Root />, document.getElementById('root'));\n"],"sourceRoot":""}